{
  "gitSyncId": "655b663c44c3196dff1b331d_656f0515a6e25d536f06db63",
  "id": "Support_searchZendeskContacts",
  "pluginId": "graphql-plugin",
  "pluginType": "API",
  "unpublishedAction": {
    "actionConfiguration": {
      "autoGeneratedHeaders": [],
      "body": "query searchEndUsers($query: String!, $limit: Int, $pageNumber: Int) {\n  search(type: USER, limit: $limit, query: $query, pageNumber: $pageNumber) {\n    edges {\n      node {\n        ...EndUserFragment\n        __typename\n      }\n      __typename\n    }\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      __typename\n    }\n    count\n    __typename\n  }\n}\n\nfragment EndUserFragment on User {\n  id\n  name\n  email\n  tags\n  photo {\n    id\n    contentUrl\n    __typename\n  }\n  isVerified\n  isSuspended\n  timeZone {\n    formattedOffset\n    translatedName\n    __typename\n  }\n  createdAt\n  updatedAt\n  __typename\n}\n",
      "encodeParamsToggle": true,
      "formData": {
        "apiContentType": "application/json"
      },
      "headers": [
        {
          "key": "content-type",
          "value": "application/json"
        }
      ],
      "httpMethod": "POST",
      "paginationType": "NONE",
      "pluginSpecifiedTemplates": [
        {
          "value": true
        },
        {
          "value": "{{\n{\n    \"query\": Utils.getDomainFromEmail(getSegmentSFContacts.data.find(item => item.account_id === SFTableData.selectedRow.account_id)?.email),\n    \"limit\": 25,\n    \"pageNumber\": 1\n}\n}}"
        },
        {
          "value": {}
        }
      ],
      "queryParameters": [],
      "timeoutInMillisecond": 10000
    },
    "confirmBeforeExecute": false,
    "datasource": {
      "id": "Zendesk GraphQL",
      "isAutoGenerated": false,
      "name": "Zendesk GraphQL",
      "pluginId": "graphql-plugin"
    },
    "dynamicBindingPathList": [
      {
        "key": "pluginSpecifiedTemplates[1].value"
      }
    ],
    "executeOnLoad": false,
    "name": "searchZendeskContacts",
    "pageId": "Support",
    "userSetOnLoad": true
  }
}